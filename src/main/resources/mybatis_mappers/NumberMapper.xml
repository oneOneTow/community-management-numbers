<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="vens.ai.graduate.design.numbers.mapper.NumberMapper">
    <resultMap id="numberMap" type="vens.ai.graduate.design.numbers.entity.Number">
        <id column="number_id" property="numberId"/>
        <result column="student_name" property="studentName"/>
        <result column="student_id" property="studentId"/>
        <result column="college_and_major" property="collegeAndMajor"/>
        <result column="call_number" property="callNumber"/>
        <result column="birth_date" property="birthDate"/>
        <result column="start_time" property="startTime"/>
    </resultMap>

    <insert id="add" parameterType="vens.ai.graduate.design.numbers.entity.Number">
        insert into numbers(student_name,
        student_id,college_and_major,department,
        nation,descrip,call_number,
        birth_date,appointment,email,start_time,status )
        values(
        #{studentName,jdbcType=VARCHAR},#{studentId,jdbcType=VARCHAR},
        #{collegeAndMajor,jdbcType=VARCHAR},#{department,jdbcType=VARCHAR},
        #{nation,jdbcType=VARCHAR},#{descrip,jdbcType=VARCHAR},
        #{callNumber,jdbcType=VARCHAR},#{birthDate,jdbcType=VARCHAR},
        #{appointment,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},
        #{startTime,jdbcType=VARCHAR},#{status,jdbcType=INTEGER})
    </insert>
    <select id="findOld" resultMap="numberMap">
        Select * from numbers where status==0;
    </select>

    <select id="findAll" resultMap="numberMap">
        select * from numbers
    </select>

    <select id="findNow" resultMap="numberMap">
        Select * from numbers where status==1;
    </select>

    <update id="update" parameterType="vens.ai.graduate.design.numbers.entity.Number">
        update numbers set student_name=#{studentName},
        student_id=#{studentId},
        college_and_major=#{collegeAndMajor},
        department=#{department},
        nation=#{nation},
        descrip=#{descrip},
        call_number=#{callNumber},
        birth_date=#{birthDate},
        appointment=#{appointment},
        email=#{email},
        start_time=#{startTime},
        status=#{status} where number_id=#{numberId}
    </update>

    <delete id="deleteByStuId">
        delete from numbers where number_id=#{*}
    </delete>

</mapper>